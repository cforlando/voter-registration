#!/usr/bin/env pypy
# vi: set filetype=python :
#GPL2, Copyright 2015 Chad MILLER  http://chad.org/

"""
Make a big map of the voter id to voter information, for display in a web page.
"""


import sys
import json
import re
import os
from florida_dept_of_elections import registration, registration_field_names

def process():

    records_hashes_by_birthday = {}

    for line in sys.stdin:

        fields = [s.strip() for s in line.split("\t")]
        try:
            r = registration(* fields)
        except TypeError:
            print("field mismatch!")
            for k, v in zip(registration_field_names, fields):
                print("\t{0} = {1!r}".format(k, v))
            # raise
            continue

        if r.withheld.lower() != 'n':
                continue

        birthday = ".".join(r.birthdate.split("/"))
        voter_id = int(r.voterid)

        if birthday not in records_hashes_by_birthday:
            records_hashes_by_birthday[birthday] = {}

        records_hashes_by_birthday[birthday][voter_id] = (r.namefirst + " " + r.namemiddle + (" " if r.namemiddle else "") + r.namelast + (" " if r.namesuffix else "") + r.namesuffix,
                r.residenceline1 + " " + r.residenceline2 + " " + r.residencecity + " " + r.residencezipcode,
                r.birthdate, r.party, r.voterstatus, r.phoneareacode + ("-" if r.phoneareacode else "") + r.phonenumber, r.phonenumberext, r.emailaddress, r.countycode, )


    for birthday in records_hashes_by_birthday:
        year = birthday[-4:]
        try:
            os.makedirs(os.path.join(sys.argv[1], year))
        except OSError:
            pass
        distinguishing_name = sys.argv[2] # data-temporary/voterids-1000.txt
        distinguishing_name = distinguishing_name.rsplit("-", 1)[1].split(".", 1)[0]
        with open(os.path.join(sys.argv[1], year, "voter-info-list-grouped-by-voterid-{0}-birthday-{1}.json".format(distinguishing_name, birthday)), "w") as f:
            json.dump(records_hashes_by_birthday[birthday], f, separators=(',', ':'))



if __name__ == "__main__":
    process()
